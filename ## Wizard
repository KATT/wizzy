# Wizard that works with back/forward buttons

- A wizard flow has a globally unique ID
- Can also, optionally, have an additional id
- We store state in [sessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage)
- When reaching any of the end steps, we clear session storage
- Whenever a step is reached - we check if it fulfills that requirements of all the previous steps, otherwise we do `router.replace(wizard.getPreviousStepRoute())`
- Snapshots are stored in the `sessionStorage` whenever we unmount a step (except for intentional prompts(?))



## Rough API

### Payment request wizard

- Start
- Login or unauth
- Select organization (not always there)
- Select payment method
    - ACH
    - Bank

- Success
- Error

```ts
const wizard = createWizard({
    steps: [
        [
            'start',
            'login',
            'selectOrganization',
            'method.authed',
            'method.unauthed',
            'success',
            'error',
        ],
    ],
    end: ['success', 'error'],
    schema: {
        start: z.boolean(), // just a boolean indicating we've "acknowledged" the step
        

    },
    withId: true,
    storage: 'localStorage' // | 'sessionStorage' is default
})

wizard.step('start', function StartStep(props) {

})


wizard.step('login', function StartStep(props) {

})


wizard.step('method', function StartStep(props) {

})


```


